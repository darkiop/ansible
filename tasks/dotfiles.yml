- name: dotfiles - recursively remove old dotfiles directory ("{{ user_username }}")
  ansible.builtin.file:
    path: /home/{{ item }}/dotfiles
    state: absent
  with_items: "{{ user_username }}"

- name: dotfiles - clone the latest dotfiles repo to "{{ user_username }}/dotfiles"
  become: true
  become_user: "{{ user_username }}"
  git:
    repo: "{{ user_dotfiles_repo }}"
    dest: /home/{{ item }}/dotfiles
    recursive: no
    force: yes
  with_items: "{{ user_username }}"

- name: dotfiles - recursively remove old dotfiles directory (root)
  ansible.builtin.file:
    path: /root/dotfiles
    state: absent

- name: dotfiles - clone the latest dotfiles repo to /root/dotfiles
  git:
    repo: "{{ user_dotfiles_repo }}"
    dest: /root/dotfiles
    recursive: no
    force: yes

- name: dotfiles - copy dotfiles-install.sh - "{{ user_username }}"
  become: true
  become_user: "{{ user_username }}"
  copy:
    src: files/scripts/dotfiles/dotfiles-install.sh
    dest: ~/dotfiles-install.sh
    mode: 0777

- name: dotfiles - install dotfiles for "{{ user_username }}"
  become: true
  become_user: "{{ user_username }}"
  command: bash ~/dotfiles-install.sh

- name: dotfiles - copy dotfiles-install.sh - root
  become: true
  become_user: root
  copy:
    src: files/scripts/dotfiles/dotfiles-install.sh
    dest: ~/dotfiles-install.sh
    mode: 0777

- name: dotfiles - install dotfiles for root
  become: true
  become_user: root
  command: bash ~/dotfiles-install.sh

- name: dotfiles - remove dotfiles-install.sh - "{{ user_username }}"
  become: true
  become_user: "{{ user_username }}"
  file:
    path: ~/dotfiles-install.sh
    state: absent

- name: dotfiles - remove dotfiles-install.sh - root
  become: true
  become_user: root
  file:
    path: ~/dotfiles-install.sh
    state: absent