# ansible-playbook main.yml -i hosts.yml -l <host>
# ansible-playbook main.yml -i hosts.yml --tags <tag1>,<tag2>
# ansible-playbook main.yml -i hosts.yml -e <variable>=<value>
#
# Get a list of facts:
# ansible -m setup
# ansible loki -m setup -a 'filter=ansible_architecture'
#
# Ask for pw insted of using SSH key
# --ask-pass
# --ask-become-pass

####################################################
# GENERAL CONFIGURATIONS
####################################################
- name: General Setup
  hosts:
    # GROUPS
    - pve_hosts
    - pve_lxc
    - pve_vm
    - vpn_gw_ext
    # CLIENTS
    - loki-new

  become: true
  become_user: root

  roles:
    # ESSENTIALS (Update/Upgrade System, User, dotfiles, Tools, timezone, sudo)
    - role: my.essentials
      tags: essentials

    # SSH-Keys
    - role: my.ssh
      tags: ssh

    ## MSMTP (https://github.com/chriswayg/ansible-msmtp-mailer)
    - role: chriswayg.msmtp-mailer
      tags: msmtp

    ## NTP (https://github.com/geerlingguy/ansible-role-ntp)
    - role: geerlingguy.ntp
      tags: ntp

  tasks:
    # TODO move to my.essentials
    - name: Create bin directory
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.file:
        path: ~/bin
        state: directory
        mode: "0755"
      tags: copy-scripts

####################################################
# GROUP SPECIFIC CONFIGURATIONS
####################################################

## PROXMOX: HOSTS
# ansible-playbook main.yml -l pve_hosts
- name: Setup for Proxmox Hosts
  hosts: pve_hosts

  become: true
  become_user: root

  roles:
    ## SAMBA (https://github.com/bertvv/ansible-role-samba)
    - role: my.samba
      tags: samba

    ## PROXMOX (https://github.com/lae/ansible-role-proxmox)
    - role: my.proxmox
      tags: proxmox

    ## SMART (https://github.com/stuvusIT/smartd)
    - role: stuvusit.smartd
      smartd_devices:
        /dev/nvme0n1:
          temperature_report_info: 55
          temperature_report_crit: 70
      tags: smartd

  tasks:
    # TODO move to my.essentials
    - name: Check if source path exists
      ansible.builtin.stat:
        path: files/hosts/pve_hosts/
      register: src_path_check

    - name: Copy scripts if source path exists
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/pve_hosts/
        dest: ~/bin/
        mode: "0755"
      when: src_path_check.stat.exists
      tags: copy-scripts


## PROXMOX: CT & VMs
# ansible-playbook main.yml -l lxc, vm
- name: Setup for Linux Containers and Virtual Machines
  hosts: pve_lxc, pve_vm

  become: true
  become_user: root

  roles:
    ## SAMBA (https://github.com/bertvv/ansible-role-samba)
    - role: my.samba
      tags: samba

    ## SECURITY (https://github.com/geerlingguy/ansible-role-security)
    - role: geerlingguy.security
      tags: security

## ADBLOCKER
# ansible-playbook main.yml -l adblocker
- name: Setup for Adblock
  hosts: adblock

  become: true
  become_user: root

  roles:
    - role: my.pihole
      tags: pihole

## VPN-GATEWAYS
# ansible-playbook main.yml -l vpn_gw_ext
- name: Setup for VPN Gateways (external)
  hosts: vpn_gw_ext

  # TODO add role my.docker
  # TODO add role my.wireguard

  become: true
  become_user: root

  roles:
    - role: my.pihole
      tags: pihole

    # TODO package docker-ce not available - maybe with Debian 12?
    # - role: my.docker
    #  tags: docker

  tasks:
    # TODO use role my.essentials if ready
    # Network configuration
    - name: Setup static ip address configuration
      become: true
      ansible.builtin.template:
        src: dhcpcd.conf-static-ip.j2
        dest: /etc/dhcpcd.conf
        owner: root
        group: root
        mode: "0644"
      tags: setup-static-ip-address

## NAS
# ansible-playbook main.yml -l nas
- name: Setup for Synology NAS
  hosts: nas

  # become: true
  # become_user: root

  # tags:

  # roles:

  tasks:
    - name: Copy files
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/odin/
        dest: /volume1/homes/{{ my_essentials_user_username }}/bin
        mode: "0755"
      tags: copy-files

## MACOS
# ansible-playbook main.yml -l macos
- name: Setup for MacOS
  hosts: os_macos

  environment:
    # https://github.com/geerlingguy/ansible-collection-mac/issues/86
    PATH: /opt/homebrew/bin:{{ lookup('ansible.builtin.env', 'PATH') }}

  roles:
    - role: my.macos
    - role: my.ssh

####################################################
# CLIENT SPECIFIC CONFIGURATIONS
####################################################

## pve-ct-iobroker (Ubuntu)
# ansible-playbook main.yml -i pve-ct-iobroker
- name: Setup for pve-ct-iobroker
  hosts: pve-ct-iobroker

  become: true
  become_user: root

  tags: pve-ct-iobroker

  # TODO add role my.iobroker
  roles:
    - role: my.smartmeter
      tags: smartmeter

  tasks:
    # TODO move to my.essentials
    - name: Check if source path exists
      ansible.builtin.stat:
        path: files/hosts/pve_hosts/
      register: src_path_check

    - name: Copy scripts if source path exists
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/pve-ct-iobroker/
        dest: ~/bin/
        mode: "0755"
      when: src_path_check.stat.exists
      tags: copy-scripts

    - name: Create cronjob for iface metric @ reboot
      ansible.builtin.cron:
        name: iface metric
        special_time: reboot
        job: ifmetric eth0 100 && ifmetric eth1 200
      tags: crontab

    ### copy rsync-backups.sh
    - name: Copy rsync-backups.sh
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/pve-ct-iobroker/rsync-backups.sh
        dest: ~/bin/rsync-backups.sh
        mode: "0755"
      tags: copy-scripts, rsync-backups

    - name: Create cronjob for rsync-backups.sh
      ansible.builtin.cron:
        name: setup crontab for rsync-backups.sh
        minute: "00"
        hour: "10"
        job: /home/darkiop/bin/rsync-backups.sh >/dev/null 2>&1
      tags: crontab, crontab-rsync-backups, rsync-backups

## pve-ct-pihole (Ubuntu)
# ansible-playbook main.yml -i pve-ct-pihole
- name: Setup for pve-ct-pihole
  hosts: pve-ct-pihole

  become: true
  become_user: root

  roles:

    ## Pi-hole
    - role: my.pihole
      tags: pihole

## loki-new (Raspbian)
# ansible-playbook main.yml -l loki-new
- name: Setup for loki-new
  hosts: loki-new

  become: true
  become_user: root

  roles:
    # TODO add role my.named
    # TODO add role my.tailscale

    ## SECURITY (https://github.com/geerlingguy/ansible-role-security)
    - role: geerlingguy.security
      tags: security

    ## Pi-hole
    - role: my.pihole
      tags: pihole

    ## SAMBA (https://github.com/bertvv/ansible-role-samba)
    - role: my.samba
      tags: samba

    ## SMARTMETER
    - role: my.smartmeter
      tags: smartmeter

    ## DOCKER (https://github.com/geerlingguy/ansible-role-docker)
    - role: my.docker
      tags: docker

  tasks:
    - name: Disable Wifi
      ansible.builtin.lineinfile:
        path: /boot/firmware/config.txt
        line: dtoverlay=disable-wifi
        insertafter: "[all]"
        create: true
        mode: "0755"
      tags: rpi-config

    - name: Disable BT
      ansible.builtin.lineinfile:
        path: /boot/firmware/config.txt
        line: dtoverlay=disable-bt
        insertafter: "[all]"
        create: true
        mode: "0755"
      tags: rpi-config

    - name: Copy arp.sh for wakeonlan
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/loki/scripts/arp.sh
        dest: ~/bin/
        mode: "0777"
      tags: crontab, crontab-arp, copy-scripts

    - name: Create cronjob for arp -s (needed for wakeonlan)
      ansible.builtin.cron:
        name: setup crontab for arp for wakeonlan
        minute: "*"
        hour: "*"
        job: /home/darkiop/bin/arp.sh >/dev/null 2>&1
      tags: crontab, crontab-arp

    - name: Copy backup_bind.sh
      become: true
      become_user: "{{ my_essentials_user_username }}"
      ansible.builtin.copy:
        src: files/hosts/loki/scripts/backup_bind.sh
        dest: ~/bin/
        mode: "0755"
      tags: bind-backup, copy-scripts

    - name: Create cronjob for backup_bind.sh
      ansible.builtin.cron:
        name: setup crontab for backup_bind.sh
        minute: "00"
        hour: "12"
        job: /home/darkiop/bin/backup_bind.sh >/dev/null 2>&1
      tags: crontab, crontab-bind-backup, bind-backup

## pbs-odin
# ansible-playbook main.yml -l pbs-odin
- name: Setup for pbs-odin
  hosts: pbs-odin

  roles:
    - role: my.pbs

  tasks:
    - name: Mount odin:/pbs-pve and ensure it is present in /etc/fstab
      become: true
      ansible.posix.mount:
        path: /mnt/pbs-odin
        src: 192.168.1.30:/volume1/pbs-pve
        fstype: nfs
        opts: defaults
        state: mounted
      tags: proxmox-backup-server-config, mount

    - name: Create Proxmox-Backup-Server datastore.cfg
      become: true
      ansible.builtin.copy:
        dest: /etc/proxmox-backup/datastore.cfg
        owner: root
        group: backup
        mode: "0640"
        content: |
          datastore: pbs-odin
            gc-schedule sat 10:00
            path /mnt/pbs-odin
      tags: proxmox-backup-server-config

## pbs-freya
# ansible-playbook main.yml -l pbs-freya
# TODO add copy of scripts to role
- name: Setup for pbs-freya
  hosts: pbs-freya

  roles:
    - role: my.pbs

  tasks:
    - name: Create Proxmox-Backup-Server datastore.cfg
      become: true
      ansible.builtin.copy:
        dest: /etc/proxmox-backup/datastore.cfg
        owner: root
        group: backup
        mode: "0640"
        content: |
          datastore: pbs-freya
            gc-schedule daily
            path /data
            prune-schedule daily
      tags: proxmox-backup-server-config

## vpn-hetzner
# ansible-playbook main.yml -l vpn-hetzner
# TODO role: my.wireguard
- name: Setup for VPN Gateway @ Hetzner
  hosts: vpn_gw_hetzner

  become: true

  roles:
    - role: my.docker
      tags: docker

## Ansible Tests
- name: Setup for Playbook tests
  hosts:
    - test-host
  become: true
  become_user: root
  roles:
    - role: my.essentials
      tags: role-essentials
    - role: my.ssh # ✅
      tags: role-ssh
    # - role: my.mqtt # ✅
    #   tags: role-mqtt
    - role: my.docker # ✅
      tags: role-docker
    # - role: my.pihole # ✅
    #   tags: role-pihole
    # - role: my.keepalived # ✅
    #   tags: role-keepalived
    # - role: my.zabbix-agent-new
    #   tags: zabbix-agent
    # - role: my.pbs
    #   tags: pbs
    # - role: my.smartmeter # ✅
    #   tags: role-smartmeter
    # - role: my.samba # ✅
    #   tags: role-samba
    # - role: my.pbs # TODO test with VM
    #   tags: role-pbs
